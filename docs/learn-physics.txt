-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/ezoerner/solutions-learn-physics-with-fp#README.md</a>
@package learn-physics
@version 0.1.0.0

module Chapter02
f :: Floating a => a -> a
stdGravityMPS2 :: Double
yRock30 :: Double -> Double
vRock30 :: Double -> Double
sinDeg :: Double -> Double
cubeRoot :: Double -> Double
g :: Double -> Double
h :: Double -> Double
gamma :: Double -> Double
bigU :: Double -> Double
bigL :: Double -> Double
bigEx :: Double -> Double
bigEz :: Double -> Double

module Chapter03
f :: Double -> Double
e :: Double -> Double
isXorY :: Char -> Bool
bagFee :: Bool -> Int
bagFee2 :: Bool -> Int
greaterThan50 :: Integer -> Bool
amazingCurve :: Int -> Int
circleRadius :: Double
cot :: Double -> Double
fe :: Double -> Double
fo :: Double -> Double
g :: Double -> Double -> Double

module Chapter04
type R = Double
type Derivative = (R -> R) -> R -> R
derivative :: R -> Derivative
f41 :: R -> R
f42 :: R -> R
df42 :: R -> R
errF :: (R -> R) -> (R -> R) -> R -> R -> R
err42 :: R -> R -> R
errA :: R -> R
f44 :: R -> R
df44 :: R -> R

module Chapter05
sndItem0 :: [a] -> a
repeatInt :: Int -> [Int]
null' :: [a] -> Bool
last' :: [a] -> a
palindrome :: String -> Bool
cycle' :: [a] -> [a]
type R = Double
euler :: R
pi' :: R
fact :: Integer -> Integer
expList :: R -> [R]
calcSeriesLengthWithinPercent :: (R -> [R]) -> (R -> R) -> R -> R -> Maybe Int
expSeries :: R -> [R]

module Chapter06
type R = Double
yRock :: R -> R -> R
vRock :: R -> R -> R

-- | Exercise 6.4.
greaterThanOrEq7' :: Int -> Bool

-- | Exercise 6.5. True if and only if s has length &gt; n
isLongerThan :: Int -> String -> Bool

-- | Exercise 6.6. Has more than 6 elements
hasMoreThan6Elements :: [a] -> Bool

-- | Exercise 6.8.
first1000Squares :: [Integer]

-- | Exercise 6.9.
repeat' :: a -> [a]

-- | Exercise 6.10.
replicate' :: Int -> a -> [a]

module Chapter07
type R = Double
plot1 :: IO ()
plot2 :: IO ()
plot3 :: IO ()
